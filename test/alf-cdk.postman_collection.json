{
	"info": {
		"_postman_id": "8e30a42a-a3a0-4a99-9361-5eefa03aec76",
		"name": "alf-cdk",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "instances-conf",
			"item": [
				{
					"name": "1 /instances-conf 400 {\"invalid\":\"Body\"}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a867af45-9b6d-471a-b76c-4345439f1c11",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"invalid\" : \"Body\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "2 /instances-conf 400 Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d407ab60-974d-4023-8610-f8acf18612df",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/instances-conf 400 alfType = -1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "216c1a2a-385e-435b-b7ec-fb1fa537f61a",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"bald\",\n\t\"alfType\": -1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4 /instances-conf 400 alfType = 1000",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4fa6223d-9d4b-4c7f-a6cd-92c4364ccdcf",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"bald\",\n\t\"alfType\": 1001\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5 POST /instances-conf 400 invalid ec2InstanceType",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "357edd07-16c4-4b49-9046-6bf84128c883",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"bald\",\n\t\"alfType\": {\n\t\t\"ec2InstanceType\": \"-t2.large\",\n\t\t\"gitRepo\": \"alf-ec2-1\"\n\t},\n\t\"customName\": \"CDK Alf bald\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5.2 POST /instances-conf 400 not allowed property",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0c9105cf-7140-4cdc-9d7c-dadf13e2555a",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"bald\",\n\t\"alfType\": {\n\t\t\"ec2InstanceType\": \"t2.large\",\n\t\t\"gitRepo\": \"alf-ec2-1\"\n\t},\n\t\"customName\": \"CDK Alf bald\",\n\t\"muhkuh\": \"blub\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5.5 /instances-conf/:id 400 not allowed property",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2335641-d9c7-447c-88fe-25b43f45f3d4",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"expectedStatus\": \"terminated\",\n\t\"muhkuh\": \"blub\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5.6 POST /instances-conf userId=bald",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f86d2a7-3b8f-4564-8d85-62ac76e33da5",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							},
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"bald\",\n\t\"alfType\": {\n\t\t\"ec2InstanceType\": \"t2.large\",\n\t\t\"gitRepo\": \"alf-ec2-1\"\n\t},\n\t\"tags\": {\n\t\t\"notice\": \"Bobbicar\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "6 POST /instances-conf userId=nicht",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b246bb8-62f6-44b4-a70d-8e8c51fdd7b4",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							},
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "nicht",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"nicht\",\n\t\"alfType\": {\n\t\t\"ec2InstanceType\": \"t2.large\",\n\t\t\"gitRepo\": \"alf-ec2-1\"\n\t},\n\t\"tags\": {\n\t\t\"customName\": \"CDK Alf nicht\",\n\t\t\"test\" : \"test tag\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7 POST /instances-conf userId=bald as user nicht",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "619dc2d6-59a1-4edb-bde9-965d3c6fb09e",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							},
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "nicht",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"bald\",\n\t\"alfType\": {\n\t\t\"ec2InstanceType\": \"t2.large\",\n\t\t\"gitRepo\": \"alf-ec2-1\"\n\t},\n\t\"tags\": {\n\t\t\"customName\": \"CDK Alf nicht\",\n\t\t\"test\" : \"test tag\",\n\t\t\"zahlTag\" : 9912\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "8 /instances-conf",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "144b45ec-470f-4ef0-8f3c-6b181e256239",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 3 instances-conf now\", function () {",
									"    pm.expect(data.length).to.equal(3);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "bf789903-35f1-491f-a0c1-861abab76240",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							]
						}
					},
					"response": []
				},
				{
					"name": "14 GET /instances-conf userId=bald",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "77e35650-9918-43e7-abd8-be208fb8b374",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 1 item now\", function () {",
									"    pm.expect(data.length).to.equal(1);",
									"});",
									"",
									"pm.test(\"tag name created\", function () {",
									"    pm.expect(data[0].tags.notice).to.eql(\"Bobbicar\");",
									"});",
									"",
									"pm.test(\"tag notice created\", function () {",
									"    pm.expect(data[0].tags.name).to.eql(\"No Name\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "64c187ff-1dbd-4d86-8018-2dd0d842e705",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf?userId=bald",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "userId",
									"value": "bald"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "15 GET /instances-conf userId=nicht",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e37300ea-3300-4cad-8b72-8a14b3e3c1e3",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 2 item now\", function () {",
									"    pm.expect(data.length).to.equal(2);",
									"});",
									"",
									"pm.globals.set(\"id\", data[0].instanceId);",
									"pm.globals.set(\"userId\", data[0].userId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "45d90476-93a8-440f-a2f1-1e3501cb6816",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "nicht",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf?userId=nicht",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "userId",
									"value": "nicht"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "16 GET /instances-conf serId=nicht",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a4fd759-7cac-4938-8b6b-f59ac6611a8c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 3 instances-conf now\", function () {",
									"    pm.expect(data.length).to.equal(3);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "bc3fe04f-0f96-4590-b702-57e331a6bfae",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf?serId=nicht",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "serId",
									"value": "nicht"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "17 /instances-conf length=3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "40c2b3ee-401a-4da4-9a3a-2a8101cc06be",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"nicht\",\n\t\"alfType\": {\n\t\t\"ec2InstanceType\": \"t2.large\",\n\t\t\"gitRepo\": \"alf-ec2-1\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "17.5 /instances-conf length=3 userId=bald",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be61ade9-5254-45f6-9587-21c2a82ccf16",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"nicht\",\n\t\"alfType\": {\n\t\t\"ec2InstanceType\": \"t2.large\",\n\t\t\"gitRepo\": \"alf-ec2-1\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						},
						"description": "bald is not allowed as maxInstances is set to 3!"
					},
					"response": []
				},
				{
					"name": "18 /instances length=3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8ee90f14-a844-4597-8f48-b1325076e20a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 3 instances-conf now\", function () {",
									"    pm.expect(data.length).to.equal(3);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "43ff811a-d64b-41dd-b1dd-34f2e7b9c0d6",
								"exec": [
									"setTimeout(function(){}, [240000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "18.5 /instances length=2 as bald",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec448c85-6f3a-4faa-84d3-6741eb123a71",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 3 instances-conf now\", function () {",
									"    pm.expect(data.length).to.equal(3);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e4aaa10d-b5ef-4cdd-9f30-e65a57f623ca",
								"exec": [
									"setTimeout(function(){}, [240000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances?MOCK_AUTH_cognito%26username=nicht",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances"
							],
							"query": [
								{
									"key": "MOCK_AUTH_cognito&username",
									"value": "nicht"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/instances without sleep",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3f824798-242a-4de8-9e9a-bd60ed62d531",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 3 instances-conf now\", function () {",
									"    pm.expect(data.length).to.equal(3);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5d882e1a-4579-4706-97ce-dc86b54b6ae2",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "19 /instances userId=nicht 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9f7a811-1e11-4931-9c98-c910c692a644",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "cea056c2-e1e5-4ad7-a83e-4b6060272640",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances?userId=nicht",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances"
							],
							"query": [
								{
									"key": "userId",
									"value": "nicht"
								},
								{
									"key": "MOCK_AUTH_cognito&username",
									"value": "nicht",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "20 /instances userId=nicht",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "de63226e-c7a7-4ed2-814f-9f230f27eb72",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 2 item now\", function () {",
									"    pm.expect(data.length).to.equal(2);",
									"});",
									"",
									"pm.globals.set(\"url\", data[0].url);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "22eee16e-7a98-494b-b930-1ae0c131d5a7",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "nicht",
								"equals": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances?userId=nicht",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances"
							],
							"query": [
								{
									"key": "userId",
									"value": "nicht"
								},
								{
									"key": "MOCK_AUTH_cognito&username",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "20.5 /instances userId=nicht as Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "64960615-a323-4bcb-891c-391b3c6de96c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 2 item now\", function () {",
									"    pm.expect(data.length).to.equal(2);",
									"});",
									"",
									"pm.globals.set(\"id\", data[0].instanceId);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "27947f00-5c97-41a1-94c4-3c7c28c0d065",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances?userId=nicht",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances"
							],
							"query": [
								{
									"key": "userId",
									"value": "nicht"
								},
								{
									"key": "MOCK_AUTH_cognito&username",
									"value": "bald",
									"disabled": true
								},
								{
									"key": "MOCK_AUTH_cognito&groups",
									"value": "Admin",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "21 GET /instances-conf/:id 400 missing userId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2b3097cc-d194-4792-9d48-0939226a6143",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "22 /instances-conf/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3e3448b-150f-41dd-aca5-999c766a8fa6",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}?userId={{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "userId",
									"value": "{{userId}}"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "22.3 /instances-conf/:id 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a6011a99-7cb7-4ba9-b1f8-41d30d42a7e4",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}?userId=not-exist-12",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								},
								{
									"key": "userId",
									"value": "not-exist-12"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/instances-conf/:id missing userId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ab991b44-0711-47e3-aee0-0088c534b59a",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"alfType\": 2,\n    \"expectedStatus\": \"terminated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "24 /instances-conf/:id status=terminated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cef654e-31d4-461b-ba08-f332294e213f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"expectedStatus\": \"terminated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "24.1 /instances-conf/:id status=stopped",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "069f0f84-a62d-4814-9070-f155f281d9ef",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"expectedStatus\": \"terminated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "24.2 /instances-conf/:id 404 user id not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3db5cdc2-81bc-4ac3-b045-054a39c20296",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"invalid/dUserName_ä#12\",\n    \"expectedStatus\": \"terminated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "24.3 PUT /instances-conf/:id 404 instance id does not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1be0d7f5-d7fc-46f8-866f-7738488dac79",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"invalid/dUserName_ä#12\",\n    \"expectedStatus\": \"terminated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "24.5 /instances length=2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "77b67215-16d8-4fd3-b070-c662a94d8fb6",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 2 instances now\", function () {",
									"    pm.expect(data.length).to.equal(2);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4b06adc3-69cd-49b1-8b54-ea902f46c17c",
								"exec": [
									"setTimeout(function(){}, [55000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "25 GET /instances-conf userId=nicht",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "98a45681-deda-47de-8a80-f198079706f7",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 1 item now\", function () {",
									"    pm.expect(data.length).to.equal(1);",
									"});",
									"",
									"pm.globals.set(\"id\", data[0].instanceId);",
									"pm.globals.set(\"userId\", data[0].userId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dcca459d-ad2a-415a-9408-1fd6205039c0",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf?userId=nicht",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "userId",
									"value": "nicht"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "26 GET after PUT /instances-conf/:id status=stopped",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ccb11b1c-f8b7-4e91-8ccd-ec672bf6594b",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"expectedStatus to be stopped\", function () {",
									"    pm.expect(data.expectedStatus).to.eql(\"stopped\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ffbc671a-1ec9-4d92-8d13-4886547af0d8",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}?userId={{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "userId",
									"value": "{{userId}}"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "28 /instances-conf/:id status=stopped",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "de7369ed-444e-4da2-8edc-ad435c696dcf",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"expectedStatus\": \"stopped\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "29 GET after PUT /instances-conf/:id status=stopped",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c2e7e197-dcfd-4d5e-b31c-68d10e765946",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"expectedStatus to be stopped\", function () {",
									"    pm.expect(data.expectedStatus).to.eql(\"stopped\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "837c950f-4644-4843-8e98-d342722a1544",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}?userId={{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "userId",
									"value": "{{userId}}"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "30 /instances/:id status=stopped",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e8d41760-acbd-4b12-837c-a25d737bae31",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"status to be stopped\", function () {",
									"    pm.expect(data.status).to.eql(\"stopped\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f63bfb92-50d4-49f7-8a1f-ce7d97a34197",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "30.2 /instances/:id 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d6ab028f-4fa1-4cba-ba73-c4b74d439835",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4cf6e8cc-a581-43c3-80d0-aef63d53bc79",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances/not-exist-id-2223",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								"not-exist-id-2223"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "30.5 /instances-conf/:id status=running",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "48a1fe4b-44c8-4ddf-b909-2f874bba0b5c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"expectedStatus\": \"running\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "30.6 GET after PUT /instances-conf/:id  status=running",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aac85a4e-8b11-4eb1-a05f-6f5d3c6ff974",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"expectedStatus to be running\", function () {",
									"    pm.expect(data.expectedStatus).to.eql(\"running\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2b348a94-99e5-42a2-a98f-098e3bead2c8",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}?userId={{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "userId",
									"value": "{{userId}}"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "30.7 /instances/:id status=running",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6e02710f-d0bb-4434-bb14-3247fb78a6f0",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"status to be running\", function () {",
									"    pm.expect(data.status).to.eql(\"running\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2c020b00-224a-4a82-b475-38510d50a346",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "31 /instances-conf/:id status=terminated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cad5b9de-22c7-438c-8576-a2152924704c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"expectedStatus\": \"terminated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "32 GET /instances-conf length=1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f474a7f8-d97b-46a3-aa5a-98592eb0c564",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 1 item now\", function () {",
									"    pm.expect(data.length).to.equal(1);",
									"});",
									"",
									"pm.globals.set(\"id\", data[0].instanceId);",
									"pm.globals.set(\"userId\", data[0].userId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0d68891f-8f57-4f39-a759-85ef379eaf5d",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "33 /instances-conf/:id status=terminated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5845ce39-69a0-4027-836d-a0ed68e2451f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"expectedStatus\": \"terminated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "34 GET /instances-conf length=0",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "623ceb45-bec8-42e7-b4a0-98ca9db00452",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 0 item now\", function () {",
									"    pm.expect(data.length).to.equal(0);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d9473794-4013-41a2-96b6-d14f5b3ff5ac",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "ac11ebc7-8472-4667-bfb8-ce1393d19e36",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "9a619a36-bf46-42eb-be93-510fc8edacde",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "e550ae65-7344-4afa-8d8f-0e58e35f28d8",
			"key": "baseUrl",
			"value": "https://m4ht2y991k.execute-api.eu-central-1.amazonaws.com/prod"
		}
	],
	"protocolProfileBehavior": {}
}