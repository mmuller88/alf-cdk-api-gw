{
	"info": {
		"_postman_id": "81e7b585-35b8-429c-9055-1835f3bdbed7",
		"name": "alf-cdk",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "instances-conf",
			"item": [
				{
					"name": "1 /instances-conf 400 {\"invalid\":\"Body\"}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df9645a0-af34-427c-9882-f98187781c4b",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"invalid\" : \"Body\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "2 /instances-conf 400 Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6dabe359-11d5-46f2-be1b-29d28ae9038c",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/instances-conf 400 alfType = -1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "586bfe81-a3b1-4651-ba9d-95fd312ea850",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"bald\",\n\t\"alfType\": -1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4 /instances-conf 400 alfType = 1000",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2e923820-6e3d-4da3-99d3-6e1875ddba25",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"bald\",\n\t\"alfType\": 1001\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5 POST /instances-conf 400 invalid ec2InstanceType",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02b251a0-47fb-443c-9413-d938935464b8",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"bald\",\n\t\"alfType\": {\n\t\t\"ec2InstanceType\": \"-t2.large\",\n\t\t\"gitRepo\": \"alf-ec2-1\"\n\t},\n\t\"customName\": \"CDK Alf bald\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5.2 POST /instances-conf 400 not allowed property",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8c0ad494-8563-4511-8116-a5c16a916dd9",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"bald\",\n\t\"alfType\": {\n\t\t\"ec2InstanceType\": \"t2.large\",\n\t\t\"gitRepo\": \"alf-ec2-1\"\n\t},\n\t\"customName\": \"CDK Alf bald\",\n\t\"muhkuh\": \"blub\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5.5 /instances-conf/:id 400 not allowed property",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d0d67d7f-14d3-4047-ac5a-7af71f97e226",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"expectedStatus\": \"terminated\",\n\t\"muhkuh\": \"blub\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5.6 POST /instances-conf userId=bald",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7623dca6-9e6f-4e51-ad8a-901425b24d38",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"bald\",\n\t\"alfType\": {\n\t\t\"ec2InstanceType\": \"t2.large\",\n\t\t\"gitRepo\": \"alf-ec2-1\"\n\t},\n\t\"tags\": {\n\t\t\"notice\": \"Bobbicar\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "6 POST /instances-conf userId=nicht",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7ff676a9-6629-476b-838c-dd3bb0f29d38",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"nicht\",\n\t\"alfType\": {\n\t\t\"ec2InstanceType\": \"t2.large\",\n\t\t\"gitRepo\": \"alf-ec2-1\"\n\t},\n\t\"tags\": {\n\t\t\"customName\": \"CDK Alf nicht\",\n\t\t\"test\" : \"test tag\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /instances-conf userId=nicht",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "20f6bddf-67cb-4261-bcfb-3be3a4a66681",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"nicht\",\n\t\"alfType\": {\n\t\t\"ec2InstanceType\": \"t2.large\",\n\t\t\"gitRepo\": \"alf-ec2-1\"\n\t},\n\t\"tags\": {\n\t\t\"customName\": \"CDK Alf nicht\",\n\t\t\"test\" : \"test tag\",\n\t\t\"zahlTag\" : 9912\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "8 /instances-conf",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3fb868d6-c2da-4667-b33e-69928f85adca",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 3 instances-conf now\", function () {",
									"    pm.expect(data.length).to.equal(3);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "19700d2b-a18d-4798-b3df-138b46949a19",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							]
						}
					},
					"response": []
				},
				{
					"name": "14 GET /instances-conf userId=bald",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "14a5326a-c3b9-4b63-9e48-b3c5d13edff3",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 1 item now\", function () {",
									"    pm.expect(data.length).to.equal(1);",
									"});",
									"",
									"pm.test(\"tag name created\", function () {",
									"    pm.expect(data[0].tags.notice).to.eql(\"Bobbicar\");",
									"});",
									"",
									"pm.test(\"tag notice created\", function () {",
									"    pm.expect(data[0].tags.name).to.eql(\"No Name\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e705d0c7-4c73-4835-b976-f1c8f5475ac5",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf?userId=bald",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "userId",
									"value": "bald"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "15 GET /instances-conf userId=nicht",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9904bc8d-2f14-49ce-9078-ac14e2d0426a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 2 item now\", function () {",
									"    pm.expect(data.length).to.equal(2);",
									"});",
									"",
									"pm.globals.set(\"id\", data[0].alfInstanceId);",
									"pm.globals.set(\"userId\", data[0].userId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1cee5637-bf63-4bad-bb44-1d60c71aa5c2",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "nicht",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf?userId=nicht",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "userId",
									"value": "nicht"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "16 GET /instances-conf serId=nicht",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "662a9afc-cff1-44f6-8c3d-d04d7ff2aa4a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 3 instances-conf now\", function () {",
									"    pm.expect(data.length).to.equal(3);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "53d750fd-c6d8-43f6-874f-f7bb44f6dc08",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf?serId=nicht",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "serId",
									"value": "nicht"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "17 /instances-conf length=3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ab8c2e69-9ab2-40f5-9b73-40fc43124cd1",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"nicht\",\n\t\"alfType\": {\n\t\t\"ec2InstanceType\": \"t2.large\",\n\t\t\"gitRepo\": \"alf-ec2-1\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "17.5 /instances-conf length=3 userId=bald",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "75d95357-4ce6-45b3-9714-e01d7571757c",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"nicht\",\n\t\"alfType\": {\n\t\t\"ec2InstanceType\": \"t2.large\",\n\t\t\"gitRepo\": \"alf-ec2-1\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						},
						"description": "bald is not allowed as maxInstances is set to 3!"
					},
					"response": []
				},
				{
					"name": "18 /instances length=3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fbdaf10f-f248-43e6-af7d-a0efa07ee862",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 3 instances-conf now\", function () {",
									"    pm.expect(data.length).to.equal(3);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "00792624-2ba2-4e04-86cc-6e94e55a4cb6",
								"exec": [
									"setTimeout(function(){}, [240000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "18.5 /instances length=2 as bald",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f289821a-9c0f-498b-b91b-9dcf560b7428",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 3 instances-conf now\", function () {",
									"    pm.expect(data.length).to.equal(3);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7582a9fd-1776-4d04-b2c1-d23ff999133d",
								"exec": [
									"setTimeout(function(){}, [240000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances?MOCK_AUTH_cognito%26username=nicht",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances"
							],
							"query": [
								{
									"key": "MOCK_AUTH_cognito&username",
									"value": "nicht"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/instances without sleep",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "04b568a7-4f0f-47d5-9106-6ecbd76b8416",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 3 instances-conf now\", function () {",
									"    pm.expect(data.length).to.equal(3);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e87d932b-91fe-47ec-ac9b-c5fc4ea6d903",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "19 /instances userId=nicht 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "34695974-f033-4047-a5e0-56232382caf6",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5280a964-eb43-4ecc-866c-f90fbde06343",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances?userId=nicht",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances"
							],
							"query": [
								{
									"key": "userId",
									"value": "nicht"
								},
								{
									"key": "MOCK_AUTH_cognito&username",
									"value": "nicht",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "20 /instances userId=nicht",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "83baca53-3549-4a04-80df-f4dd003806d5",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 2 item now\", function () {",
									"    pm.expect(data.length).to.equal(2);",
									"});",
									"",
									"pm.globals.set(\"url\", data[0].url);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a9818ffd-dc41-4f5f-bb24-252c700c9790",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "nicht",
								"equals": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances?userId=nicht",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances"
							],
							"query": [
								{
									"key": "userId",
									"value": "nicht"
								},
								{
									"key": "MOCK_AUTH_cognito&username",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "20.5 /instances userId=nicht as Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7566cfd7-e32d-4eae-a5b0-242b995abe48",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 2 item now\", function () {",
									"    pm.expect(data.length).to.equal(2);",
									"});",
									"",
									"pm.globals.set(\"id\", data[0].id);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c95efe7e-fabd-4819-ba04-9a4105769b55",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances?userId=nicht",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances"
							],
							"query": [
								{
									"key": "userId",
									"value": "nicht"
								},
								{
									"key": "MOCK_AUTH_cognito&username",
									"value": "bald",
									"disabled": true
								},
								{
									"key": "MOCK_AUTH_cognito&groups",
									"value": "Admin",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "21 GET /instances-conf/:id 400 missing userId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cb5fa5a9-4fb8-4224-8476-dd1f7d35e03f",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "22 /instances-conf/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2763e12c-7bba-48a5-89a9-37c14f15153e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}?userId={{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "userId",
									"value": "{{userId}}"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "22.3 /instances-conf/:id 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e93521fb-0d09-4d50-872f-65c4cae0f2b3",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}?userId=not-exist-12",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								},
								{
									"key": "userId",
									"value": "not-exist-12"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/instances-conf/:id missing userId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bcc98b8b-a0bb-4638-957b-05ab3c699cb2",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"alfType\": 2,\n    \"expectedStatus\": \"terminated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "24 /instances-conf/:id status=terminated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f6a16645-1fea-45f6-8a71-5510453f3032",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"expectedStatus\": \"terminated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "24.1 /instances-conf/:id status=stopped",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8ce6f9cf-0321-4f81-8434-d379b4ad1b47",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"expectedStatus\": \"terminated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "24.2 /instances-conf/:id 404 user id not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cd578e8b-406b-42cf-8b49-67e736e49e9d",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"invalid/dUserName_ä#12\",\n    \"expectedStatus\": \"terminated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "24.3 PUT /instances-conf/:id 404 instance id does not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "46d92e0b-95a8-4c7d-a0c6-dfec739097d6",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"invalid/dUserName_ä#12\",\n    \"expectedStatus\": \"terminated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "24.5 /instances length=2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bf9dc38-e6e2-468c-9326-dc579d8c57b3",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 2 instances now\", function () {",
									"    pm.expect(data.length).to.equal(2);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2e1b7bb6-b6ec-4b5b-a625-6b114088b3d2",
								"exec": [
									"setTimeout(function(){}, [55000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "25 GET /instances-conf userId=nicht",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bf50b902-b15d-40d1-acb0-9c4a772ff771",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 1 item now\", function () {",
									"    pm.expect(data.length).to.equal(1);",
									"});",
									"",
									"pm.globals.set(\"id\", data[0].alfInstanceId);",
									"pm.globals.set(\"userId\", data[0].userId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "961fe90e-62d7-4fd2-9f6e-4b8142a1896b",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf?userId=nicht",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "userId",
									"value": "nicht"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "26 GET after PUT /instances-conf/:id status=stopped",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e1404cad-5460-4854-9b57-f97d5049e62c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"expectedStatus to be stopped\", function () {",
									"    pm.expect(data.expectedStatus).to.eql(\"stopped\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d2e98a22-0308-4bfe-b02a-6ec50c575cbc",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}?userId={{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "userId",
									"value": "{{userId}}"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "28 /instances-conf/:id status=stopped",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "191af7c2-e626-419b-8055-51eb34ad6e3c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"expectedStatus\": \"stopped\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "29 GET after PUT /instances-conf/:id status=stopped",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "691a8da4-890f-4047-a4ad-7c922ee647c8",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"expectedStatus to be stopped\", function () {",
									"    pm.expect(data.expectedStatus).to.eql(\"stopped\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9b85fd3e-bcf5-469f-b8d6-04746dede2b7",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}?userId={{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "userId",
									"value": "{{userId}}"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "30 /instances/:id status=stopped",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d85c1690-b7f2-4cba-99a0-ca4f1c051b36",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"status to be stopped\", function () {",
									"    pm.expect(data.status).to.eql(\"stopped\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3679f7f9-7294-49e7-a113-3fea8401a77d",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "30.2 /instances/:id 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ad476b56-4460-4b7c-ac49-8efb30d32661",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "036d4838-2785-4455-8f76-97adc7792e1d",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances/not-exist-id-2223",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								"not-exist-id-2223"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "30.5 /instances-conf/:id status=running",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b0b4cac0-13cb-41d3-9ae4-0b9540dcfe1a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"expectedStatus\": \"running\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "30.6 GET after PUT /instances-conf/:id  status=running",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b13d0fc7-43d6-437b-944b-8890da19fca8",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"expectedStatus to be running\", function () {",
									"    pm.expect(data.expectedStatus).to.eql(\"running\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "149cff3e-6c53-47f1-be36-24e7775d3a80",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}?userId={{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "userId",
									"value": "{{userId}}"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "30.7 /instances/:id status=running",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cef3cf35-d0f7-446e-a106-580e48eceede",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"status to be running\", function () {",
									"    pm.expect(data.status).to.eql(\"running\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2611c7b8-92dc-44a6-9b88-45dc4a3bc943",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "31 /instances-conf/:id status=terminated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bbb121df-fd8a-469c-945e-7e6f73a040bf",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"expectedStatus\": \"terminated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "32 GET /instances-conf length=1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c89838a9-74a2-4199-9737-47f017909e8c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 1 item now\", function () {",
									"    pm.expect(data.length).to.equal(1);",
									"});",
									"",
									"pm.globals.set(\"id\", data[0].alfInstanceId);",
									"pm.globals.set(\"userId\", data[0].userId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5a202a9c-6e42-42b1-ab43-d796efdafd67",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "33 /instances-conf/:id status=terminated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a2621cde-1cee-4702-8a4a-821f6c49fc7f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"expectedStatus\": \"terminated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "34 GET /instances-conf length=0",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2d7a0c3e-99ac-421f-a99e-e954d469647b",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 0 item now\", function () {",
									"    pm.expect(data.length).to.equal(0);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5f909cf5-fdf8-4fed-bdf5-79056cc01047",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "da63f964-f18b-49c5-8ac4-00a3fba4a7e2",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "875d599e-b4fa-4d9b-b1bf-86a6e58547da",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "e550ae65-7344-4afa-8d8f-0e58e35f28d8",
			"key": "baseUrl",
			"value": "https://m4ht2y991k.execute-api.eu-central-1.amazonaws.com/prod"
		}
	],
	"protocolProfileBehavior": {}
}