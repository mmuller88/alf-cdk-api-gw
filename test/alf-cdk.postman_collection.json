{
	"info": {
		"_postman_id": "30b06305-8b30-4b0e-9088-2de5e62c3710",
		"name": "alf-cdk",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "instances-conf",
			"item": [
				{
					"name": "24.5 /instances length=2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "af8721af-fc51-44f7-89a2-b074568513f9",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 2 instances now\", function () {",
									"    pm.expect(data.length).to.equal(2);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c8ca8288-2bbf-484d-965f-e89c126a7829",
								"exec": [
									"setTimeout(function(){}, [55000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "19 /instances userId=nicht 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "64b749cf-e058-4ec7-80d4-919b505ae0c3",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7bfd12d1-0074-4ab7-abb1-800a95a51664",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances?userId=nicht",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances"
							],
							"query": [
								{
									"key": "userId",
									"value": "nicht"
								},
								{
									"key": "MOCK_AUTH_cognito&username",
									"value": "nicht",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "20.5 /instances userId=nicht as Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7219a592-9508-4a51-9183-6b963efb85b4",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 2 item now\", function () {",
									"    pm.expect(data.length).to.equal(2);",
									"});",
									"",
									"pm.globals.set(\"url\", data[0].url);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1a03a67b-4a8b-4ccc-bc51-6bdcd27bcd26",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances?userId=nicht",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances"
							],
							"query": [
								{
									"key": "userId",
									"value": "nicht"
								},
								{
									"key": "MOCK_AUTH_cognito&username",
									"value": "bald",
									"disabled": true
								},
								{
									"key": "MOCK_AUTH_cognito&groups",
									"value": "Admin",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "25 GET /instances-conf userId=nicht",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "63250d0f-703a-429e-b0b9-265777265a3e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 1 item now\", function () {",
									"    pm.expect(data.length).to.equal(1);",
									"});",
									"",
									"pm.globals.set(\"id\", data[0].alfInstanceId);",
									"pm.globals.set(\"userId\", data[0].userId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8321f001-a035-4009-8952-a3c1148caa26",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances-conf?userId=nicht",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "userId",
									"value": "nicht"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "26 GET after PUT /instances-conf/:id status=stopped",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "976234a8-a4fc-4774-8844-e8cdb41a0bfe",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"expectedStatus to be stopped\", function () {",
									"    pm.expect(data.expectedStatus).to.eql(\"stopped\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "295b3385-5412-4ba6-a9c3-fed33148e82f",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}?userId={{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "userId",
									"value": "{{userId}}"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "16 GET /instances-conf serId=nicht",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da0294f6-e055-4820-9166-1f91096bc129",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 3 instances-conf now\", function () {",
									"    pm.expect(data.length).to.equal(3);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0212a092-4ed1-438c-bcea-531105685aaf",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf?serId=nicht",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "serId",
									"value": "nicht"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "14 GET /instances-conf userId=bald",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05d1bda2-4cf8-45fd-9258-bda5e14054f6",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 1 item now\", function () {",
									"    pm.expect(data.length).to.equal(1);",
									"});",
									"",
									"pm.test(\"tag name created\", function () {",
									"    pm.expect(data[0].tags.notice).to.eql(\"Bobbicar\");",
									"});",
									"",
									"pm.test(\"tag notice created\", function () {",
									"    pm.expect(data[0].tags.name).to.eql(\"No Name\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "07eac08a-4531-4282-9509-092489a2dbf2",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf?userId=bald",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "userId",
									"value": "bald"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "29 GET after PUT /instances-conf/:id status=stopped",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f19ef106-1cb8-48c6-90e0-f0ee4d6a49e8",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"expectedStatus to be stopped\", function () {",
									"    pm.expect(data.expectedStatus).to.eql(\"stopped\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "271933c3-1fdb-48f2-ae9c-87ed8ba0bc4c",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}?userId={{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "userId",
									"value": "{{userId}}"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/instances without sleep",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6e01b66d-a48d-45e4-99dc-c3f1ee288924",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 3 instances-conf now\", function () {",
									"    pm.expect(data.length).to.equal(3);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f1c2f008-0959-4253-9f85-b468550beb89",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "32 GET /instances-conf length=1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c2c518a4-5c63-4540-8d50-48136e63dc8c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 1 item now\", function () {",
									"    pm.expect(data.length).to.equal(1);",
									"});",
									"",
									"pm.globals.set(\"id\", data[0].alfInstanceId);",
									"pm.globals.set(\"userId\", data[0].userId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8a51bf18-6eab-46b0-9fc0-6102c992e0b4",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "8 /instances-conf",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b829faba-0bb7-4feb-9bdf-d7a96da01c79",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 3 instances-conf now\", function () {",
									"    pm.expect(data.length).to.equal(3);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0266f210-36f1-477f-9f25-0e17f356e6bf",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							]
						}
					},
					"response": []
				},
				{
					"name": "15 GET /instances-conf userId=nicht",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f1d9ec24-861b-405d-bb50-eb5259560674",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 2 item now\", function () {",
									"    pm.expect(data.length).to.equal(2);",
									"});",
									"",
									"pm.globals.set(\"id\", data[0].alfInstanceId);",
									"pm.globals.set(\"userId\", data[0].userId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5d8c89a9-ec6f-4dbd-b040-fb44c8bbcf9b",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "nicht",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances-conf?userId=nicht",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "userId",
									"value": "nicht"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "21 GET /instances-conf/:id 400 missing userId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "811a21a0-c493-47d0-a90f-e96152d9f8bd",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "22.3 /instances-conf/:id 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8a0253b6-a355-4006-a1ce-4cfdc95af754",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}?userId=not-exist-12",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								},
								{
									"key": "userId",
									"value": "not-exist-12"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "30.6 GET after PUT /instances-conf/:id  status=running",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "095f6eb6-249b-443b-9fd5-49d408af677e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"expectedStatus to be running\", function () {",
									"    pm.expect(data.expectedStatus).to.eql(\"running\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4c4898ca-0525-4b6a-9b84-55bf89208871",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}?userId={{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "userId",
									"value": "{{userId}}"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "22 /instances-conf/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ff625575-73b2-4792-b3f7-0f688a2d97d3",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}?userId={{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "userId",
									"value": "{{userId}}"
								},
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "20 /instances userId=nicht",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c6fbc740-a779-427d-92e9-10c650c30c4a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 0 item now\", function () {",
									"    pm.expect(data.length).to.equal(0);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "be4659cb-f45e-4fb4-a276-89fd93571e55",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"equals": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances?userId=nicht",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances"
							],
							"query": [
								{
									"key": "userId",
									"value": "nicht"
								},
								{
									"key": "MOCK_AUTH_cognito&username",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "34 GET /instances-conf length=0",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a92b7996-8064-4271-88fd-25f0433fe32b",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 0 item now\", function () {",
									"    pm.expect(data.length).to.equal(0);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "319787d5-8a4b-4965-bd67-b1d7c3155fb0",
								"exec": [
									"setTimeout(function(){}, [5000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "18.5 /instances length=2 as bald",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3a19e2c-d105-4bc0-9ebe-33c97d994c5b",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 3 instances-conf now\", function () {",
									"    pm.expect(data.length).to.equal(3);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "eba65034-5941-4c08-9111-bcbb81a44dfd",
								"exec": [
									"setTimeout(function(){}, [240000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances"
							],
							"query": [
								{
									"key": "MOCK_AUTH_cognito%26username",
									"value": "nicht",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "30.2 /instances/:id 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e8ecb0de-036c-4039-9ba9-b091594bbe24",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e1deac6d-3035-4a4c-b0d9-0fca19193d52",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances/not-exist-id-2223",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								"not-exist-id-2223"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "30.7 /instances/:id status=running",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f4c07844-20c9-4122-be9c-3e9d0d5d874d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"status to be running\", function () {",
									"    pm.expect(data.status).to.eql(\"running\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "92a88f74-9b83-4100-ae36-3dcd94327c54",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "18 /instances length=3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f32832a3-e8ca-4ce0-83e0-49257cac2422",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"Has 3 instances-conf now\", function () {",
									"    pm.expect(data.length).to.equal(3);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "bc4c6c12-6521-4086-ad59-90f916900324",
								"exec": [
									"setTimeout(function(){}, [240000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "MOCK_AUTH_cognito&groups",
								"value": "Admin",
								"type": "text"
							},
							{
								"key": "MOCK_AUTH_cognito&username",
								"value": "bald",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instances",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "30 /instances/:id status=stopped",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f6de210f-eba4-442c-985e-78d0f71e6f65",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.test(\"status to be stopped\", function () {",
									"    pm.expect(data.status).to.eql(\"stopped\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4c8971a9-909a-43b2-af8f-8e59922caf55",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/instances/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "17.5 /instances-conf length=3 userId=bald",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3f7c652f-5c8f-4b21-8943-e6faca76f59c",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"nicht\",\n\t\"alfType\": {\n\t\t\"ec2InstanceType\": \"t2.large\",\n\t\t\"gitRepo\": \"alf-ec2-1\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						},
						"description": "bald is not allowed as maxInstances is set to 3!"
					},
					"response": []
				},
				{
					"name": "4 /instances-conf 400 alfType = 1000",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3d77dd4c-2f81-425b-b84f-e69f0eb9cf6d",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"bald\",\n\t\"alfType\": 1001\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/instances-conf 400 alfType = -1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5790577d-b0ef-4695-8bb1-70523ae8c730",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"bald\",\n\t\"alfType\": -1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5.5 /instances-conf/:id 400 not allowed property",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3f11df9f-064a-479a-bcf3-024ad774d381",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"expectedStatus\": \"terminated\",\n\t\"muhkuh\": \"blub\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /instances-conf userId=nicht",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56117bc7-f879-407e-ae3b-263ab9af0a23",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"nicht\",\n\t\"alfType\": {\n\t\t\"ec2InstanceType\": \"t2.large\",\n\t\t\"gitRepo\": \"alf-ec2-1\"\n\t},\n\t\"tags\": {\n\t\t\"customName\": \"CDK Alf nicht\",\n\t\t\"test\" : \"test tag\",\n\t\t\"zahlTag\" : 9912\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "30.5 /instances-conf/:id status=running",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0fcbbf98-3236-4166-8249-9e3efd4bef1d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"expectedStatus\": \"running\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5.6 POST /instances-conf userId=bald",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8895d7e9-a4ad-4833-aa16-4972e332b400",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"bald\",\n\t\"alfType\": {\n\t\t\"ec2InstanceType\": \"t2.large\",\n\t\t\"gitRepo\": \"alf-ec2-1\"\n\t},\n\t\"tags\": {\n\t\t\"notice\": \"Bobbicar\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "24.1 /instances-conf/:id status=stopped",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5c110221-1be3-4560-86ae-0dfba898bd66",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"expectedStatus\": \"terminated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "28 /instances-conf/:id status=stopped",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bb8413b8-64cf-4dcf-a99b-a280049a252d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"expectedStatus\": \"stopped\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "24 /instances-conf/:id status=terminated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9a6b1ae9-4549-4da7-9f5d-853b4c84c821",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"expectedStatus\": \"terminated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "2 /instances-conf 400 Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "413c3848-e44e-45e5-8fd7-5dd1a65b026b",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "33 /instances-conf/:id status=terminated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e50d9bc-946b-49ef-a055-b26ce4afd626",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"expectedStatus\": \"terminated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "17 /instances-conf length=3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f89020ee-a440-4f2c-ba3a-9a496dace635",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"nicht\",\n\t\"alfType\": {\n\t\t\"ec2InstanceType\": \"t2.large\",\n\t\t\"gitRepo\": \"alf-ec2-1\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "24.3 PUT /instances-conf/:id 404 instance id does not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4f37d2ac-8873-40dd-936c-048ad9583118",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"invalid/dUserName_ä#12\",\n    \"expectedStatus\": \"terminated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "24.2 /instances-conf/:id 404 user id not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c89a483-56db-4004-9205-15f1d80338bc",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"invalid/dUserName_ä#12\",\n    \"expectedStatus\": \"terminated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5 POST /instances-conf 400 invalid ec2InstanceType",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f8c3119e-026a-4929-80b6-c5aaeb33cef9",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"bald\",\n\t\"alfType\": {\n\t\t\"ec2InstanceType\": \"-t2.large\",\n\t\t\"gitRepo\": \"alf-ec2-1\"\n\t},\n\t\"customName\": \"CDK Alf bald\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/instances-conf/:id missing userId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "37f403af-6b2e-4098-8136-a66109965246",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"alfType\": 2,\n    \"expectedStatus\": \"terminated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "1 /instances-conf 400 {\"invalid\":\"Body\"}",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6784d4d8-135f-4e7c-8a1a-0e970842b263",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"invalid\" : \"Body\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5.2 POST /instances-conf 400 not allowed property",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f560d5bd-7e4b-4fd6-b8a7-caacd2deaf1c",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"bald\",\n\t\"alfType\": {\n\t\t\"ec2InstanceType\": \"t2.large\",\n\t\t\"gitRepo\": \"alf-ec2-1\"\n\t},\n\t\"customName\": \"CDK Alf bald\",\n\t\"muhkuh\": \"blub\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "31 /instances-conf/:id status=terminated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "80fafc09-8748-43b5-97a2-44cdd48b2010",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"{{userId}}\",\n    \"expectedStatus\": \"terminated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf",
								"{{id}}"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "6 POST /instances-conf userId=nicht",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a07f0cfb-7704-4b7a-91a1-94f8f6084471",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Cache-Control",
								"type": "text",
								"value": "max-age=0",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userId\": \"nicht\",\n\t\"alfType\": {\n\t\t\"ec2InstanceType\": \"t2.large\",\n\t\t\"gitRepo\": \"alf-ec2-1\"\n\t},\n\t\"tags\": {\n\t\t\"customName\": \"CDK Alf nicht\",\n\t\t\"test\" : \"test tag\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instances-conf",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instances-conf"
							],
							"query": [
								{
									"key": "mockAuthUser",
									"value": "bald",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "23c941f4-b67f-4c41-b654-798c413f1215",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "292799e7-9c59-415f-b36c-c9be916fc005",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "19c264e3-2908-4d08-aa5e-a0ab32becc5a",
			"key": "baseUrl",
			"value": "https://k9hgpj3sfi.execute-api.eu-central-1.amazonaws.com/prod"
		}
	],
	"protocolProfileBehavior": {}
}