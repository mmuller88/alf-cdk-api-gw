{
  "Resources": {
    "RestApi0C43BF4B": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "Alf Instance Service"
      },
      "Metadata": {
        "aws:cdk:path": "alf-cdk-api-gw-dev/RestApi/Resource"
      }
    },
    "RestApiCloudWatchRoleE3ED6605": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "alf-cdk-api-gw-dev/RestApi/CloudWatchRole/Resource"
      }
    },
    "RestApiAccount7C83CF5A": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "RestApiCloudWatchRoleE3ED6605",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "RestApi0C43BF4B"
      ],
      "Metadata": {
        "aws:cdk:path": "alf-cdk-api-gw-dev/RestApi/Account"
      }
    },
    "RestApiDeployment180EC5036623f5adf8b33e7ab61ed7922a66d781": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "RestApi0C43BF4B"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "RestApiinstancesconfGET7E980A13",
        "RestApiinstancesconfOPTIONS13E795F5",
        "RestApiinstancesconfDAF321B5",
        "RestApiinstancesalfInstanceIdGETAD144123",
        "RestApiinstancesalfInstanceIdOPTIONS4669CE2A",
        "RestApiinstancesalfInstanceIdEC3D5325",
        "RestApiinstancesGETAE6193D3",
        "RestApiinstancesOPTIONS83CED38E",
        "RestApiinstancesE7BF16AA",
        "RestApiOPTIONS6AA64D2D",
        "RestApiInstance582E924F",
        "RestApiInstanceConfListCB86643B",
        "RestApiInstanceList1E6E6DE2"
      ],
      "Metadata": {
        "aws:cdk:path": "alf-cdk-api-gw-dev/RestApi/Deployment/Resource"
      }
    },
    "RestApiDeploymentStageprod3855DE66": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "RestApi0C43BF4B"
        },
        "DeploymentId": {
          "Ref": "RestApiDeployment180EC5036623f5adf8b33e7ab61ed7922a66d781"
        },
        "StageName": "prod"
      },
      "Metadata": {
        "aws:cdk:path": "alf-cdk-api-gw-dev/RestApi/DeploymentStage.prod/Resource"
      }
    },
    "RestApiOPTIONS6AA64D2D": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Fn::GetAtt": [
            "RestApi0C43BF4B",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'https://api.alfpro.net'",
                "method.response.header.Vary": "'Origin'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
              },
              "ResponseTemplates": {
                "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\"https://app.alfpro.net\") || $origin.matches(\"https://www.alfpro.net\") || $origin.matches(\"https://openapi.dev.alfpro.net\") || $origin.matches(\"https://openapi.alfpro.net\") || $origin.matches(\"https://api.dev.alfpro.net\") || $origin.matches(\"https://app.dev.alfpro.net\") || $origin.matches(\"https://www.alfpro.net\") || $origin.matches(\"http://localhost:3000\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "alf-cdk-api-gw-dev/RestApi/Default/OPTIONS/Resource"
      }
    },
    "RestApiinstancesE7BF16AA": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "RestApi0C43BF4B",
            "RootResourceId"
          ]
        },
        "PathPart": "instances",
        "RestApiId": {
          "Ref": "RestApi0C43BF4B"
        }
      },
      "Metadata": {
        "aws:cdk:path": "alf-cdk-api-gw-dev/RestApi/Default/instances/Resource"
      }
    },
    "RestApiinstancesOPTIONS83CED38E": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "RestApiinstancesE7BF16AA"
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'https://api.alfpro.net'",
                "method.response.header.Vary": "'Origin'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
              },
              "ResponseTemplates": {
                "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\"https://app.alfpro.net\") || $origin.matches(\"https://www.alfpro.net\") || $origin.matches(\"https://openapi.dev.alfpro.net\") || $origin.matches(\"https://openapi.alfpro.net\") || $origin.matches(\"https://api.dev.alfpro.net\") || $origin.matches(\"https://app.dev.alfpro.net\") || $origin.matches(\"https://www.alfpro.net\") || $origin.matches(\"http://localhost:3000\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "alf-cdk-api-gw-dev/RestApi/Default/instances/OPTIONS/Resource"
      }
    },
    "RestApiinstancesGETAE6193D3": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "RestApiinstancesE7BF16AA"
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "RestApiInstanceList1E6E6DE2"
              }
            },
            "StatusCode": "200"
          }
        ],
        "RequestParameters": {
          "method.request.querystring.userId": false
        }
      },
      "Metadata": {
        "aws:cdk:path": "alf-cdk-api-gw-dev/RestApi/Default/instances/GET/Resource"
      }
    },
    "RestApiinstancesalfInstanceIdEC3D5325": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "RestApiinstancesE7BF16AA"
        },
        "PathPart": "{alfInstanceId}",
        "RestApiId": {
          "Ref": "RestApi0C43BF4B"
        }
      },
      "Metadata": {
        "aws:cdk:path": "alf-cdk-api-gw-dev/RestApi/Default/instances/{alfInstanceId}/Resource"
      }
    },
    "RestApiinstancesalfInstanceIdOPTIONS4669CE2A": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "RestApiinstancesalfInstanceIdEC3D5325"
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'https://api.alfpro.net'",
                "method.response.header.Vary": "'Origin'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
              },
              "ResponseTemplates": {
                "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\"https://app.alfpro.net\") || $origin.matches(\"https://www.alfpro.net\") || $origin.matches(\"https://openapi.dev.alfpro.net\") || $origin.matches(\"https://openapi.alfpro.net\") || $origin.matches(\"https://api.dev.alfpro.net\") || $origin.matches(\"https://app.dev.alfpro.net\") || $origin.matches(\"https://www.alfpro.net\") || $origin.matches(\"http://localhost:3000\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "alf-cdk-api-gw-dev/RestApi/Default/instances/{alfInstanceId}/OPTIONS/Resource"
      }
    },
    "RestApiinstancesalfInstanceIdGETAD144123": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "RestApiinstancesalfInstanceIdEC3D5325"
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "RestApiInstance582E924F"
              }
            },
            "StatusCode": "200"
          }
        ],
        "RequestParameters": {
          "method.request.path.alfInstanceId": true
        }
      },
      "Metadata": {
        "aws:cdk:path": "alf-cdk-api-gw-dev/RestApi/Default/instances/{alfInstanceId}/GET/Resource"
      }
    },
    "RestApiinstancesconfDAF321B5": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "RestApi0C43BF4B",
            "RootResourceId"
          ]
        },
        "PathPart": "instances-conf",
        "RestApiId": {
          "Ref": "RestApi0C43BF4B"
        }
      },
      "Metadata": {
        "aws:cdk:path": "alf-cdk-api-gw-dev/RestApi/Default/instances-conf/Resource"
      }
    },
    "RestApiinstancesconfOPTIONS13E795F5": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "RestApiinstancesconfDAF321B5"
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'https://api.alfpro.net'",
                "method.response.header.Vary": "'Origin'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
              },
              "ResponseTemplates": {
                "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\"https://app.alfpro.net\") || $origin.matches(\"https://www.alfpro.net\") || $origin.matches(\"https://openapi.dev.alfpro.net\") || $origin.matches(\"https://openapi.alfpro.net\") || $origin.matches(\"https://api.dev.alfpro.net\") || $origin.matches(\"https://app.dev.alfpro.net\") || $origin.matches(\"https://www.alfpro.net\") || $origin.matches(\"http://localhost:3000\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "alf-cdk-api-gw-dev/RestApi/Default/instances-conf/OPTIONS/Resource"
      }
    },
    "RestApiinstancesconfGET7E980A13": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "RestApiinstancesconfDAF321B5"
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": {
                "Ref": "RestApiInstanceConfListCB86643B"
              }
            },
            "StatusCode": "200"
          }
        ],
        "RequestParameters": {
          "method.request.querystring.userId": true
        }
      },
      "Metadata": {
        "aws:cdk:path": "alf-cdk-api-gw-dev/RestApi/Default/instances-conf/GET/Resource"
      }
    },
    "RestApiInstanceConfListCB86643B": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Ref": "RestApi0C43BF4B"
        },
        "ContentType": "application/json",
        "Name": "InstanceConfList",
        "Schema": {
          "type": "array",
          "additionalProperties": false,
          "items": [
            {
              "additionalProperties": false,
              "allOf": [
                {
                  "required": [
                    "userId"
                  ],
                  "type": "object",
                  "properties": {
                    "alfType": {
                      "required": [
                        "ec2InstanceType",
                        "gitRepo"
                      ],
                      "type": "object",
                      "properties": {
                        "ec2InstanceType": {
                          "type": "string",
                          "description": "Supported Ec2 Instance Type. Supported are:\nt2.large - 2 CPU, 8 GB RAM\nt2.xlarge - 4 CPU, 16 GB RAM\n",
                          "enum": [
                            "t2.large",
                            "t2.xlarge"
                          ]
                        },
                        "gitRepo": {
                          "type": "string",
                          "description": "Name of supported Alfresco Docker Compose Deployment deployed with the Alfresco installer.\nalf-ec-1 : ACS 6.2 Community, ACA\n",
                          "enum": [
                            "alf-ec2-1"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "userId": {
                      "maxLength": 64,
                      "minLength": 2,
                      "pattern": "[a-zA-Z0-9]{2,64}",
                      "type": "string",
                      "additionalProperties": false,
                      "description": "Simple user name. Please use your user name from the system."
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "required": [
                    "alfInstanceId",
                    "expectedStatus"
                  ],
                  "properties": {
                    "alfInstanceId": {
                      "maxLength": 5,
                      "minLength": 5,
                      "pattern": "[a-z0-9]{5,5}",
                      "type": "string",
                      "additionalProperties": false,
                      "description": "User Instance Identifier created with node uuid. Consists of 5 characters!"
                    },
                    "expectedStatus": {
                      "type": "string",
                      "description": "The state you are allow to put your instance in. Warning putting instances into terminated will delete the instance-conf and instance!",
                      "enum": [
                        "running",
                        "terminated",
                        "stopped"
                      ]
                    }
                  }
                }
              ]
            }
          ],
          "$schema": "http://json-schema.org/draft-04/schema#"
        }
      },
      "Metadata": {
        "aws:cdk:path": "alf-cdk-api-gw-dev/RestApi/InstanceConfList/Resource"
      }
    },
    "RestApiInstanceList1E6E6DE2": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Ref": "RestApi0C43BF4B"
        },
        "ContentType": "application/json",
        "Name": "InstanceList",
        "Schema": {
          "type": "array",
          "additionalProperties": false,
          "items": [
            {
              "required": [
                "adminCredentials",
                "alfInstanceId",
                "status"
              ],
              "type": "object",
              "properties": {
                "alfInstanceId": {
                  "maxLength": 5,
                  "minLength": 5,
                  "pattern": "[a-z0-9]{5,5}",
                  "type": "string",
                  "additionalProperties": false,
                  "description": "User Instance Identifier created with node uuid. Consists of 5 characters!"
                },
                "status": {
                  "type": "string",
                  "description": "Shows the current state. Even if your instance is in the running state it might take some minutes until the provided url is reachable.",
                  "enum": [
                    "running",
                    "terminated",
                    "stopped",
                    "pending",
                    "stopping"
                  ]
                },
                "adminCredentials": {
                  "required": [
                    "password",
                    "userName"
                  ],
                  "type": "object",
                  "properties": {
                    "userName": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "url": {
                  "type": "string",
                  "description": "The Url to access ACA. Currently only http is supported. Urls are ACA = ../ Share = ../share Alfresco = ../alfresco . It takes up to 3 minutes until this url becomes available. In future I plan to implement a healthcheck (probably leveraging AWS AutoScaling) to make the readiness of ACS more feaseble.\n\nThe propagation of the DNS Record normally takes a bit longer. Alternatively you can use the awsUrl to access your instance."
                },
                "awsUrl": {
                  "type": "string",
                  "description": "Alternative url for the Alfresco instance."
                }
              },
              "additionalProperties": false
            }
          ],
          "$schema": "http://json-schema.org/draft-04/schema#"
        }
      },
      "Metadata": {
        "aws:cdk:path": "alf-cdk-api-gw-dev/RestApi/InstanceList/Resource"
      }
    },
    "RestApiInstance582E924F": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Ref": "RestApi0C43BF4B"
        },
        "ContentType": "application/json",
        "Name": "Instance",
        "Schema": {
          "required": [
            "adminCredentials",
            "alfInstanceId",
            "status"
          ],
          "type": "object",
          "properties": {
            "alfInstanceId": {
              "maxLength": 5,
              "minLength": 5,
              "pattern": "[a-z0-9]{5,5}",
              "type": "string",
              "additionalProperties": false,
              "description": "User Instance Identifier created with node uuid. Consists of 5 characters!"
            },
            "status": {
              "type": "string",
              "description": "Shows the current state. Even if your instance is in the running state it might take some minutes until the provided url is reachable.",
              "enum": [
                "running",
                "terminated",
                "stopped",
                "pending",
                "stopping"
              ]
            },
            "adminCredentials": {
              "required": [
                "password",
                "userName"
              ],
              "type": "object",
              "properties": {
                "userName": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "url": {
              "type": "string",
              "description": "The Url to access ACA. Currently only http is supported. Urls are ACA = ../ Share = ../share Alfresco = ../alfresco . It takes up to 3 minutes until this url becomes available. In future I plan to implement a healthcheck (probably leveraging AWS AutoScaling) to make the readiness of ACS more feaseble.\n\nThe propagation of the DNS Record normally takes a bit longer. Alternatively you can use the awsUrl to access your instance."
            },
            "awsUrl": {
              "type": "string",
              "description": "Alternative url for the Alfresco instance."
            }
          },
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-04/schema#"
        }
      },
      "Metadata": {
        "aws:cdk:path": "alf-cdk-api-gw-dev/RestApi/Instance/Resource"
      }
    },
    "RestApiapiDomainName57789728": {
      "Type": "AWS::ApiGateway::DomainName",
      "Properties": {
        "CertificateArn": "arn:aws:acm:us-east-1:981237193288:certificate/f605dd8c-4ae3-4c1b-9471-4b152e0f8846",
        "DomainName": "api.dev.alfpro.net",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "SecurityPolicy": "TLS_1_2"
      },
      "Metadata": {
        "aws:cdk:path": "alf-cdk-api-gw-dev/RestApi/apiDomainName/Resource"
      }
    },
    "RestApiapiDomainNameMapalfcdkapigwdevRestApiDAF12CA26291CF1B": {
      "Type": "AWS::ApiGateway::BasePathMapping",
      "Properties": {
        "DomainName": {
          "Ref": "RestApiapiDomainName57789728"
        },
        "RestApiId": {
          "Ref": "RestApi0C43BF4B"
        },
        "Stage": {
          "Ref": "RestApiDeploymentStageprod3855DE66"
        }
      },
      "Metadata": {
        "aws:cdk:path": "alf-cdk-api-gw-dev/RestApi/apiDomainName/Map:--=>alfcdkapigwdevRestApiDAF12CA2/Resource"
      }
    },
    "CustomDomainAliasRecord76233043": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Name": "api.dev.alfpro.net.",
        "Type": "A",
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "RestApiapiDomainName57789728",
              "DistributionDomainName"
            ]
          },
          "HostedZoneId": {
            "Fn::GetAtt": [
              "RestApiapiDomainName57789728",
              "DistributionHostedZoneId"
            ]
          }
        },
        "HostedZoneId": "Z036396421QYOR6PI3CPX"
      },
      "Metadata": {
        "aws:cdk:path": "alf-cdk-api-gw-dev/CustomDomainAliasRecord/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Modules": "aws-cdk=1.66.0,@aws-cdk/assets=1.69.0,@aws-cdk/aws-apigateway=1.69.0,@aws-cdk/aws-applicationautoscaling=1.69.0,@aws-cdk/aws-autoscaling=1.69.0,@aws-cdk/aws-autoscaling-common=1.69.0,@aws-cdk/aws-autoscaling-hooktargets=1.69.0,@aws-cdk/aws-certificatemanager=1.69.0,@aws-cdk/aws-cloudformation=1.69.0,@aws-cdk/aws-cloudwatch=1.69.0,@aws-cdk/aws-codebuild=1.69.0,@aws-cdk/aws-codeguruprofiler=1.69.0,@aws-cdk/aws-codepipeline=1.69.0,@aws-cdk/aws-codepipeline-actions=1.69.0,@aws-cdk/aws-ec2=1.69.0,@aws-cdk/aws-ecr=1.69.0,@aws-cdk/aws-ecr-assets=1.69.0,@aws-cdk/aws-ecs=1.69.0,@aws-cdk/aws-elasticloadbalancingv2=1.69.0,@aws-cdk/aws-events=1.69.0,@aws-cdk/aws-events-targets=1.69.0,@aws-cdk/aws-iam=1.69.0,@aws-cdk/aws-kms=1.69.0,@aws-cdk/aws-lambda=1.69.0,@aws-cdk/aws-logs=1.69.0,@aws-cdk/aws-route53=1.69.0,@aws-cdk/aws-route53-targets=1.69.0,@aws-cdk/aws-s3=1.69.0,@aws-cdk/aws-s3-assets=1.69.0,@aws-cdk/aws-servicediscovery=1.69.0,@aws-cdk/aws-sns=1.69.0,@aws-cdk/aws-sns-subscriptions=1.69.0,@aws-cdk/aws-sqs=1.69.0,@aws-cdk/aws-ssm=1.69.0,@aws-cdk/cloud-assembly-schema=1.69.0,@aws-cdk/core=1.69.0,@aws-cdk/custom-resources=1.69.0,@aws-cdk/cx-api=1.69.0,@aws-cdk/pipelines=1.69.0,@aws-cdk/region-info=1.69.0,jsii-runtime=node.js/v10.19.0"
      },
      "Metadata": {
        "aws:cdk:path": "alf-cdk-api-gw-dev/CDKMetadata/Default"
      }
    }
  },
  "Outputs": {
    "RestApiEndpoint0551178A": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "RestApi0C43BF4B"
            },
            ".execute-api.eu-central-1.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "RestApiDeploymentStageprod3855DE66"
            },
            "/"
          ]
        ]
      }
    },
    "ApiDomainName": {
      "Value": {
        "Ref": "RestApiapiDomainName57789728"
      }
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store."
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 4 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}